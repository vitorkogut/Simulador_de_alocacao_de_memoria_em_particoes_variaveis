/*
 


                                      /;    ;\
                                   __  \\____//
                                  /{_\_/   `'\____
                                  \___   (o)  (o  }
       _____________________________/          :--'  
   ,-,'`@@@@@@@@       @@@@@@         \_    `__\
  ;:(  @@@@@@@@@        @@@             \___(o'o)
  :: )  @@@@          @@@@@@        ,'@@(  `===='       
  :: : @@@@@:          @@@@         `@@@:
  :: \  @@@@@:       @@@@@@@)    (  '@@@'
  ;; /\      /`,    @@@@@@@@@\   :@@@@@)
  ::/  )    {_----------------:  :~`,~~;
 ;;'`; :   )                  :  / `; ;
;;;; : :   ;                  :  ;  ; :              
`'`' / :  :                   :  :  : :
    )_ \__;      ";"          :_ ;  \_\      
    :__\  \    * `,'*         \  \  :  \     
        `^'     \ :/           `^'  `-^-' 



 */
package simuladormemoria;
import java.awt.Color;
import java.awt.Component;
import java.util.concurrent.ThreadLocalRandom;
import static javax.lang.model.element.ElementKind.CLASS;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vitor
 */
public class Criacao_dados extends javax.swing.JFrame {

    public boolean jaPedido = false;
    public int valorMerda;
    public Bloco_processo[] blocosFinais;
    
    /**
     * Creates new form Criacao_dados
     */
    public Criacao_dados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bTotalMemoria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bTamanhoParticao = new javax.swing.JTextField();
        tParticoes = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bTamanhoMaxProcesso = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bTamanhoMinProcesso = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bQuantidadeProcessos = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tTabela = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bTempoMaxProcesso = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bTempoMinProcesso = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        bConfirma = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Quantidade de memoria em Bytes:");

        bTotalMemoria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Tamanho da partição em Bytes:");

        bTamanhoParticao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bTamanhoParticao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bTamanhoParticaoFocusLost(evt);
            }
        });
        bTamanhoParticao.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bTamanhoParticaoInputMethodTextChanged(evt);
            }
        });
        bTamanhoParticao.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bTamanhoParticaoPropertyChange(evt);
            }
        });

        tParticoes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Tamanho do processo em Bytes:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("MAX:");

        bTamanhoMaxProcesso.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bTamanhoMaxProcesso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bTamanhoMaxProcessoFocusLost(evt);
            }
        });
        bTamanhoMaxProcesso.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bTamanhoMaxProcessoInputMethodTextChanged(evt);
            }
        });
        bTamanhoMaxProcesso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bTamanhoMaxProcessoPropertyChange(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("MIN:");

        bTamanhoMinProcesso.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bTamanhoMinProcesso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bTamanhoMinProcessoFocusLost(evt);
            }
        });
        bTamanhoMinProcesso.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bTamanhoMinProcessoInputMethodTextChanged(evt);
            }
        });
        bTamanhoMinProcesso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bTamanhoMinProcessoPropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Metodo:");

        bQuantidadeProcessos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bQuantidadeProcessos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bQuantidadeProcessosFocusLost(evt);
            }
        });
        bQuantidadeProcessos.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bQuantidadeProcessosInputMethodTextChanged(evt);
            }
        });
        bQuantidadeProcessos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bQuantidadeProcessosPropertyChange(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("GERAR PROCESSOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TAMANHO (Bytes)", "NOME", "TEMPO DE PROCESSO", "PARTIÇÔES", "COR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tTabela);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Tempo do processo em UT:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("MAX:");

        bTempoMaxProcesso.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bTempoMaxProcesso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bTempoMaxProcessoFocusLost(evt);
            }
        });
        bTempoMaxProcesso.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bTempoMaxProcessoInputMethodTextChanged(evt);
            }
        });
        bTempoMaxProcesso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bTempoMaxProcessoPropertyChange(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("MIN:");

        bTempoMinProcesso.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bTempoMinProcesso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                bTempoMinProcessoFocusLost(evt);
            }
        });
        bTempoMinProcesso.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                bTempoMinProcessoInputMethodTextChanged(evt);
            }
        });
        bTempoMinProcesso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                bTempoMinProcessoPropertyChange(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Fit", "Best Fit -> Não Funciona :(" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Quantidade de processos:");

        bConfirma.setBackground(new java.awt.Color(0, 204, 0));
        bConfirma.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bConfirma.setText("CONFIRMAR");
        bConfirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConfirmaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bTamanhoParticao, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(tParticoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bTamanhoMaxProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bTamanhoMinProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bQuantidadeProcessos, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bTempoMaxProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bTempoMinProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bTotalMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(95, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(bConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bTotalMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bTamanhoParticao, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tParticoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bTamanhoMaxProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bTamanhoMinProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bTempoMaxProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bTempoMinProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bQuantidadeProcessos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(bConfirma, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bTamanhoParticaoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bTamanhoParticaoPropertyChange
  
    }//GEN-LAST:event_bTamanhoParticaoPropertyChange

    
    public String retornaNome(){
        String nome = "teste";
        int indice = ThreadLocalRandom.current().nextInt(0, 5 + 1);
        
        switch(indice){
            case 0:
                nome = "SO";
                break;
            case 1:
                nome = "Chorme";
                break;
            case 2:
                nome = "Steam";
                break;
            case 3:
                nome = "Navegador";
                break;
            case 4:
                nome = "Torrent";
                break;
            case 5:
                nome = "Netflix";
                break;
        }
        
        
        return nome;
    }
    
    public int retornaCor(){
        int cor;
        
        cor = ThreadLocalRandom.current().nextInt(70000000, 99000000);
        
        
        return cor;
    }
    
    
    
    
    
    private void bTamanhoParticaoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bTamanhoParticaoInputMethodTextChanged

    }//GEN-LAST:event_bTamanhoParticaoInputMethodTextChanged

    private void bTamanhoParticaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bTamanhoParticaoFocusLost
        int qnt = Integer.parseInt(bTotalMemoria.getText()) / Integer.parseInt(bTamanhoParticao.getText());
        tParticoes.setText( Integer.toString(qnt) + " partições na memoria principal." );
    }//GEN-LAST:event_bTamanhoParticaoFocusLost

    private void bTamanhoMaxProcessoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bTamanhoMaxProcessoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bTamanhoMaxProcessoFocusLost

    private void bTamanhoMaxProcessoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bTamanhoMaxProcessoInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bTamanhoMaxProcessoInputMethodTextChanged

    private void bTamanhoMaxProcessoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bTamanhoMaxProcessoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_bTamanhoMaxProcessoPropertyChange

    private void bTamanhoMinProcessoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bTamanhoMinProcessoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bTamanhoMinProcessoFocusLost

    private void bTamanhoMinProcessoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bTamanhoMinProcessoInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bTamanhoMinProcessoInputMethodTextChanged

    private void bTamanhoMinProcessoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bTamanhoMinProcessoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_bTamanhoMinProcessoPropertyChange

    private void bQuantidadeProcessosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bQuantidadeProcessosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bQuantidadeProcessosFocusLost

    private void bQuantidadeProcessosInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bQuantidadeProcessosInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bQuantidadeProcessosInputMethodTextChanged

    private void bQuantidadeProcessosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bQuantidadeProcessosPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_bQuantidadeProcessosPropertyChange

    private void bTempoMaxProcessoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bTempoMaxProcessoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bTempoMaxProcessoFocusLost

    private void bTempoMaxProcessoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bTempoMaxProcessoInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bTempoMaxProcessoInputMethodTextChanged

    private void bTempoMaxProcessoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bTempoMaxProcessoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_bTempoMaxProcessoPropertyChange

    private void bTempoMinProcessoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bTempoMinProcessoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_bTempoMinProcessoFocusLost

    private void bTempoMinProcessoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_bTempoMinProcessoInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bTempoMinProcessoInputMethodTextChanged

    private void bTempoMinProcessoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bTempoMinProcessoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_bTempoMinProcessoPropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int quantidadeProcessos = Integer.parseInt(bQuantidadeProcessos.getText());
        int quantidadeMemoria = Integer.parseInt(bTotalMemoria.getText());
        int tamanhoParticao = Integer.parseInt(bTamanhoParticao.getText());
        int tamanhoProcessoMax = Integer.parseInt(bTamanhoMaxProcesso.getText());
        int tamanhoProcessoMin = Integer.parseInt(bTamanhoMinProcesso.getText());
        int tempoProcessoMax = Integer.parseInt(bTempoMaxProcesso.getText());
        int tempoProcessoMin = Integer.parseInt(bTempoMinProcesso.getText());
    
        
    
        
        
        if (jaPedido){
            DefaultTableModel model = (DefaultTableModel) tTabela.getModel();
            for(int i=0; i<quantidadeProcessos; i++){
                model.removeRow(0);   
            }
        }
        
        
        Bloco_processo processos[] = new Bloco_processo[quantidadeProcessos];
        for(int i=0; i < quantidadeProcessos; i++){
            processos[i] = new Bloco_processo();
        }
        
        
        for(int i=0; i < quantidadeProcessos; i++){
            processos[i].cod = i;
            processos[i].tamanho = ThreadLocalRandom.current().nextInt(tamanhoProcessoMin, tamanhoProcessoMax + 1);
            processos[i].tempo = ThreadLocalRandom.current().nextInt(tempoProcessoMin, tempoProcessoMax + 1);
            processos[i].nome = retornaNome();
            processos[i].cor = retornaCor();
            processos[i].tamnhoEmCelulas = (float)processos[i].tamanho / (float)tamanhoParticao;
            processos[i].inserido = false;
        }
        
        for(int i=0; i < quantidadeProcessos; i++){
            DefaultTableModel model = (DefaultTableModel) tTabela.getModel();
            model.addRow(new Object[]{processos[i].cod, processos[i].tamanho, processos[i].nome, processos[i].tempo, (float)processos[i].tamanho / (float)tamanhoParticao, processos[i].cor});
        }
        jaPedido = true;
        
         
         //PINTANTE
        tTabela.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column){
            JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            //CODIGO AQUI
                Color c = Color.WHITE;
               
                label.setBackground( new Color(Integer.parseInt(table.getValueAt(row,5).toString())));   
                label.setAlignmentX(CENTER);
                label.setAlignmentY(CENTER);
            //ATE AQUI
        return label;

         }});

        blocosFinais = processos;
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConfirmaActionPerformed
        viewSumulacao view = new viewSumulacao();
        view.callViewSimulador(blocosFinais, Integer.parseInt(bTotalMemoria.getText()) / Integer.parseInt(bTamanhoParticao.getText()), jComboBox1.getSelectedIndex(), Integer.parseInt(bQuantidadeProcessos.getText()));
    }//GEN-LAST:event_bConfirmaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Criacao_dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Criacao_dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Criacao_dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Criacao_dados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Criacao_dados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConfirma;
    private javax.swing.JTextField bQuantidadeProcessos;
    private javax.swing.JTextField bTamanhoMaxProcesso;
    private javax.swing.JTextField bTamanhoMinProcesso;
    private javax.swing.JTextField bTamanhoParticao;
    private javax.swing.JTextField bTempoMaxProcesso;
    private javax.swing.JTextField bTempoMinProcesso;
    private javax.swing.JTextField bTotalMemoria;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel tParticoes;
    private javax.swing.JTable tTabela;
    // End of variables declaration//GEN-END:variables
}
